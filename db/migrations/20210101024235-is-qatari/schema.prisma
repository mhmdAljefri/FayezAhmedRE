// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  sessions       Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Project {
  id                       Int             @id @default(autoincrement())
  createdAt                DateTime        @default(now())
  updatedAt                DateTime        @updatedAt
  paymentType              PAYMENT_TYPES   @default(cash)
  status                   STATUS          @default(inprogress)
  country                  Country         @relation(fields: [countryId], references: [id])
  countryId                Int
  city                     City?           @relation(fields: [cityId], references: [id])
  cityId                   Int?
  propertyType             PropertyType?   @relation(fields: [propertyTypeId], references: [id])
  propertyTypeId           Int?
  isHousingComplex         Boolean         @default(false)
  housingComplexText       String?
  housingComplexImage      String?
  name                     String
  views                    Int             @default(0)
  subTitle                 String
  details                  String
  complationDate           DateTime?
  image                    String
  mainVideo                String?
  mainVideoPreview         String?
  gallery                  String[]
  floorplan                String[]
  features                 String[]
  brochure                 String?
  constructingUpdateVideo  String?
  constructingUpdatePrview String?
  nearBy                   Json?
  roomsWithPrices          RoomWithPrice[]
  location                 Json?
  installmentPlan          Json?
  locationText             String?
  oprationCompanies        Json?
  Offer                    Offer[]
}

model OprationCompanyPage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  country   Country  @relation(fields: [countryId], references: [id])
  countryId Int

  title                    String
  description              String
  image                    String
  galleryImages            String[]
  video                    String?
  constructingUpdateVideo  String?
  constructingUpdatePrview String?
  oprationCompanies        Json?
}

model Offer {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  paymentType PAYMENT_TYPES @default(cash)
  status      STATUS        @default(inprogress)
  country     Country       @relation(fields: [countryId], references: [id])
  countryId   Int
  project     Project?      @relation(fields: [projectId], references: [id])
  projectId   Int?

  name                     String   @unique
  details                  String
  image                    String?
  mainVideo                String?
  gallery                  String[]
  features                 String[]
  brochure                 String?
  constructingUpdateVideo  String?
  constructingUpdatePrview String?
  location                 Json?
  installmentPlan          Json?
}

model PropertyType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  projects Project[]
}

model RoomWithPrice {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  room      String?
  value     Int      @default(autoincrement())

  price       String
  priceQatar  String
  priceTurkey String
  priceKSA    String
  priceKuwait String
  priceUAE    String
  priceOman   String
  Project     Project? @relation(fields: [projectId], references: [id])
  projectId   Int?
}

model Country {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name           String   @unique
  nameEN         String?
  image          String
  gallery        Json?
  isTurkey       Boolean  @default(false)
  isQatari       Boolean  @default(false)
  rooms          String[]
  carouselImages String[]

  cities               City[]
  projects             Project[]
  explores             Explore[]
  offers               Offer[]
  oprationCompanyPages OprationCompanyPage[]
  contacts             Contact[]

}

model City {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String  @unique
  latituade String?
  longitude String?

  country   Country   @relation(fields: [countryId], references: [id])
  countryId Int
  Project   Project[]
}

model Contact {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name           String   @unique
  location       String
  phones         String[]
  mobiles        String[]
  locationObject Json

  country   Country @relation(fields: [countryId], references: [id])
  countryId Int
}

model Furnish {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  image       String
  price       String


  furnishCategory   FurnishCategory @relation(fields: [furnishCategoryId], references: [id])
  furnishCategoryId Int
}

model FurnishCategory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String    @unique
  image     String
  furnishes Furnish[]
}

model Feature {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  image String
}

model Partner {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  image String
}

model Carousel {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  position Int     @unique @default(autoincrement())
  title    String?
  text     String?
  url      String?
  image    String
}

model Explore {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String        @unique
  type        EXPLOAR_TYPES @default(dontMissitGallery)
  description String
  image       String
  videoUrl    String?
  country     Country?      @relation(fields: [countryId], references: [id])
  countryId   Int?
}

model Request {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type  REQUEST_TYPES @default(flights)
  isNew Boolean       @default(true)
  data  Json
}

// --------------------------------------

enum REQUEST_TYPES {
  flights
  hotels
  cars
  consultings
  enquire
}

enum EXPLOAR_TYPES {
  dontMissitGallery
  getInspiredGallery
  exploreGallery
}

enum STATUS {
  completed
  inprogress
  resell
  installment
  compatible_installment
  ocean_view
  granted_by_gov
}

enum PAYMENT_TYPES {
  cash
  installment
}
